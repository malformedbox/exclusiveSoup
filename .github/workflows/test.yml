name: Test other folder
  
on:
  workflow_run:
    workflows: ["Workflow with inputs"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      alwaysPass:
        description: 'Always Pass'
        required: true
        default: 'false' # Use 'false' as a string
        type: string # Set the input type as a string
      alwaysFail:
        description: 'Always Fail'
        required: false
        default: 'false'
        type: string
      addition:
        description: 'Addition'
        required: true
        default: 'false'
        type: string

run-name: Test other folder - ${{ github.run_number}} - ${{ inputs.description }}
        
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
      
    steps:  
      - name: Checkout code
        uses: actions/checkout@v2
        
      # The passed XML is only modified in the input workflow, there is not an actual change/commit on the XML
      - name: Download modified XML
        uses: actions/download-artifact@v2
        with:
          name: Full Suite XML
          path: src/resources/testng/full/fullSuite.xml

      # - name: Modify XML file
      #   run: |        
      #       if [ "${{ github.event.inputs.alwaysPass }}" = "true" ]; then
      #         # sed -i 's/exclude name="alwaysPass"/include name="alwaysPass"/g' src/resources/full/tests.xml
      #         echo "Running ${{ github.event.inputs.alwaysPass }}" 
        
      #         if [ "${{ github.event.inputs.alwaysFail }}" = "true" ]; then
      #           # sed -i 's/exclude name="alwaysFail"/include name="alwaysFail"/g' src/resources/full/tests.xml
      #           echo "Running ${{ github.event.inputs.alwaysFail }}" 
      #         fi
      #       fi
      #   shell: bash

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Generate Allure Report
        if: always()
        run: mvn allure:report

      # This is needed to grab Allure history
      - name: Get Allure history
        if: needs['Generate Allure Report'].outputs.status == 'success'
        uses: actions/checkout@v2
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      # This is needed to add history to the report
      - name: Build Report
        if: success()
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: target/allure-results
          allure_history: allure-history
          subfolder: workflow1
          keep_reports: 10 # Keeps only 10 previous history, oldest gets deleted
          
      - name: Deploy to Github Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          
      - name: Post the link to the report
        if: success()
        uses: Sibz/github-status-action@v1
        with: 
            authToken: ${{secrets.GITHUB_TOKEN}}
            context: 'Test report'
            state: 'success'
            sha: ${{ github.event.pull_request.head.sha || github.sha }}
            # Must be in https scheme and must match the subfolder's value in Build Report step
            target_url: https://malformedbox.github.io/exclusiveSoup/workflow1/${{ github.run_number}}
